apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "24.0.3"
    defaultConfig {
        applicationId "ru.spbau.mit.placenotifier"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    defaultConfig {
        jackOptions {
            enabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'
    compile 'com.android.support:design:25.0.1'
    compile 'com.google.android.gms:play-services-maps:9.8.0'
    compile 'com.google.android.gms:play-services-appindexing:9.8.0'
    compile 'com.android.support:support-v4:25.0.1'
    compile 'com.android.support:support-v13:25.0.1'
    testCompile 'junit:junit:4.12'
}

apply plugin: 'checkstyle'


task checkstyleMain (type: Checkstyle) {
    ignoreFailures = false
    showViolations = true
    source 'src/main', 'src/release'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    reports {
        xml.destination "$project.buildDir/reports/checkstyle/main.xml"
    }
    classpath = files()
    configFile = file("${rootProject.rootDir}/config/checkstyle/checkstyle.xml")
}

task checkstyleTest (type: Checkstyle){
    ignoreFailures = false
    showViolations = false
    source 'src/androidTest'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    reports {
        xml.destination "$project.buildDir/reports/checkstyle/test.xml"
    }
    classpath = files()
    configFile = file("${rootProject.rootDir}/config/checkstyle/checkstyle.xml")
}

task checkstyle(dependsOn:['checkstyleMain']) {
    description 'Runs Checkstyle inspection against Android sourcesets.'
    group = 'Code Quality'
}
